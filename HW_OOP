class Student:
    def __init__(self, name, surname, gender):
        self.name = name
        self.surname = surname
        self.gender = gender
        self.finished_courses = []
        self.courses_in_progress = []
        self.grades = {}
        self.average_grades = {}
      
        def rate_lecturer(self, lecturer, course_attached, grade):
          if isinstance(lecturer, Lecturer) and course_attached in lecturer.courses and course_attached in lecturer.grades:
              lecturer.grades[course_attached] += [grade_for_lecturer]
          else:
              lecturer.grades[course_attached] = [grade_for_lecturer]

    def __str__(self):
        some_student = f"Имя: {Student.name}, \nФамилия: {Student.surname}, \nСредняя оценка за домашние задания: {avg_grades}, \nКурсы в процессе изучения: {courses_in_progress} \nЗавершенные курсы: {finished_courses}"
        return some_student
class Mentor:
    def __init__(self, name, surname):
        self.name = name
        self.surname = surname
        self.courses_attached = []
      
class Lecturer(Mentor):
    def __init__(self, name, surname):
        super().__init__(name, surname)
        self.grade_for_lecturer = {}
    
    def lecturer_avg():
        average = sum(Lecturer.grade_for_lecturer) / len(Lecturer.grade_for_lecturer)
      
    def __str__(self):
      some_lecturer = f"Имя: {Lecturer.name} \nФамилия:  {Lecturer.surname} \nСредняя оценка за лекции: {Lecturer_avg}"
      return some_lecturer
  
class Reviewer(Mentor):
    def __init__(self, name, surname):
        super().__init__(name, surname)
      
    def rate_hw(self, student, course, grade):
        if isinstance(student, Student) and course in self.courses_attached and course in student.courses_in_progress:
            if course in student.grades:
                student.grades[course] += [grade]
            else:
                student.grades[course] = [grade]
        else:
            return 'Ошибка'  
    def __str__(self):
        return 'Имя: ' + self.name + '\nФамилия: ' + self.surname

def average(students, course):
    for student in Student:
        if isinstanse (student, Student) and course in student.grades[course]:
            average.grades = sum{student.grades}/len{student.grades}
            return average.grades

best_student = Student('Ruoy', 'Eman', 'your_gender')
best_student.courses_in_progress += ['Python']

second_student = Student('Mike', 'Baloon', 'M')
second_student.courses_in_progress += ['Python']

cool_mentor = Mentor('Some', 'Buddy')
cool_mentor.courses_attached += ['Python']

second_mentor = Mentor('Donald', 'Trump')
second_mentor.courses_attached += ['Python']

first_lecturer = Lecturer('Lola', 'Lomova')
second_lecturer = Lecturer('Daria', 'Umnica')

first_reviewer = Reviewer('Sergey', 'Ivanov')
second_reviewer = Reviewer('Alex', 'Little')

cool_mentor.rate_hw(best_student, 'Python', 10)
cool_mentor.rate_hw(best_student, 'Python', 10)
cool_mentor.rate_hw(best_student, 'Python', 10)
 
print(best_student.grades)